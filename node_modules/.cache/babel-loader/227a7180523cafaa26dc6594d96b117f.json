{"ast":null,"code":"import _objectSpread from\"C:/Users/user/Desktop/Uma/vtc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/user/Desktop/Uma/vtc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"component\"];import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import{CheckRouteAccess}from\"./CommonMethods/Authentication\";import{APIPath}from\"./CommonMethods/Fetch\";// eslint-disable-next-line react/prop-types\nimport{jsx as _jsx}from\"react/jsx-runtime\";export default function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,_excluded);// const [access, setAccess] = useState(CheckRouteAccess());\nreturn/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){return CheckRouteAccess(props.location.pathname)?/*#__PURE__*/_jsx(Component,_objectSpread({},props)):/*#__PURE__*/_jsx(Redirect,{to:APIPath()+\"login\"});}}));}","map":{"version":3,"sources":["C:/Users/user/Desktop/Uma/vtc/src/PrivateRoute.js"],"names":["React","Route","Redirect","CheckRouteAccess","APIPath","PrivateRoute","Component","component","rest","props","location","pathname"],"mappings":"uVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,gBAAT,KAAiC,gCAAjC,CACA,OAASC,OAAT,KAAwB,uBAAxB,CACA;2CACA,cAAe,SAASC,CAAAA,YAAT,MAAyD,IAAtBC,CAAAA,SAAsB,MAAjCC,SAAiC,CAARC,IAAQ,0CACtE;AACA,mBACE,KAAC,KAAD,gCACMA,IADN,MAEE,MAAM,CAAE,gBAAAC,KAAK,QACXN,CAAAA,gBAAgB,CAACM,KAAK,CAACC,QAAN,CAAeC,QAAhB,CAAhB,cACE,KAAC,SAAD,kBAAeF,KAAf,EADF,cAGE,KAAC,QAAD,EACE,EAAE,CAAEL,OAAO,GAAK,OADlB,EAJS,EAFf,GADF,CAcD","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { CheckRouteAccess } from \"./CommonMethods/Authentication\";\nimport { APIPath } from \"./CommonMethods/Fetch\";\n// eslint-disable-next-line react/prop-types\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  // const [access, setAccess] = useState(CheckRouteAccess());\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        CheckRouteAccess(props.location.pathname) ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={APIPath() + \"login\"}\n          />\n        )\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}