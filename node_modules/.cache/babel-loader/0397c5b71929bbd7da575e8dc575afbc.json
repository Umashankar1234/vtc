{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Uma\\\\vtc\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport './App.css';\nimport AppRoutes from \"./AppRoutes\";\nimport { reducer } from \"./CommonMethods/Authentication\";\nimport { AuthContext } from \"./CommonMethods/Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CryptoJS = require(\"crypto-js\");\n\nexport default function App() {\n  _s();\n\n  const initialState = {\n    isAuthenticated: false,\n    user: null,\n    token: null\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const VerifyAuth = () => {\n    var encKey = \"873518d8d7a146f184173f87b86ffc35\";\n    var userbytes = localStorage.getItem(\"user\") && CryptoJS.AES.decrypt(localStorage.getItem(\"user\"), encKey);\n    let user = userbytes && userbytes.toString(CryptoJS.enc.Utf8);\n    const token = userbytes && userbytes.toString(CryptoJS.enc.Utf8); // eslint-disable-next-line no-const-assign\n\n    if (user && token) {\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          user,\n          token\n        }\n      });\n    } else dispatch({\n      type: \"LOGOUT\"\n    });\n  };\n\n  useEffect(() => {\n    VerifyAuth();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Uma/vtc/src/App.js"],"names":["React","useReducer","useEffect","AppRoutes","reducer","AuthContext","CryptoJS","require","App","initialState","isAuthenticated","user","token","state","dispatch","VerifyAuth","encKey","userbytes","localStorage","getItem","AES","decrypt","toString","enc","Utf8","type","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,WAAT,QAA4B,gCAA5B;;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,eAAe,EAAE,KADE;AAEnBC,IAAAA,IAAI,EAAE,IAFa;AAGnBC,IAAAA,KAAK,EAAE;AAHY,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACG,OAAD,EAAUK,YAAV,CAApC;;AACA,QAAMM,UAAU,GAAG,MAAM;AACvB,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GACXC,YAAY,CAACC,OAAb,CAAqB,MAArB,KACAb,QAAQ,CAACc,GAAT,CAAaC,OAAb,CAAqBH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB,EAAmDH,MAAnD,CAFF;AAIA,QAAIL,IAAI,GAAGM,SAAS,IAAIA,SAAS,CAACK,QAAV,CAAmBhB,QAAQ,CAACiB,GAAT,CAAaC,IAAhC,CAAxB;AACA,UAAMZ,KAAK,GACTK,SAAS,IAAIA,SAAS,CAACK,QAAV,CAAmBhB,QAAQ,CAACiB,GAAT,CAAaC,IAAhC,CADf,CAPuB,CASvB;;AACA,QAAIb,IAAI,IAAIC,KAAZ,EAAmB;AACjBE,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,OAAO,EAAE;AACPf,UAAAA,IADO;AAEPC,UAAAA;AAFO;AAFF,OAAD,CAAR;AAOD,KARD,MAQOE,QAAQ,CAAC;AAAEW,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACR,GAnBD;;AAoBAvB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACA,IAAA,KAAK,EAAE;AACLF,MAAAA,KADK;AAELC,MAAAA;AAFK,KADP;AAAA,2BAMA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxCuBN,G;;KAAAA,G;AAwCvB","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport './App.css';\nimport AppRoutes from \"./AppRoutes\";\nimport { reducer } from \"./CommonMethods/Authentication\";\nimport { AuthContext } from \"./CommonMethods/Authentication\";\nvar CryptoJS = require(\"crypto-js\");\nexport default function App() {\n  const initialState = {\n    isAuthenticated: false,\n    user: null,\n    token: null\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const VerifyAuth = () => {\n    var encKey = \"873518d8d7a146f184173f87b86ffc35\";\n    var userbytes =\n      localStorage.getItem(\"user\") &&\n      CryptoJS.AES.decrypt(localStorage.getItem(\"user\"), encKey);\n     \n    let user = userbytes && userbytes.toString(CryptoJS.enc.Utf8);\n    const token =\n      userbytes && userbytes.toString(CryptoJS.enc.Utf8);\n    // eslint-disable-next-line no-const-assign\n    if (user && token) {\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          user,\n          token\n        }\n      });\n    } else dispatch({ type: \"LOGOUT\" });\n  };\n  useEffect(() => {\n    VerifyAuth();\n  }, []);\n  return (\n    <AuthContext.Provider\n    value={{\n      state,\n      dispatch\n    }}\n  >\n    <AppRoutes />\n  </AuthContext.Provider>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}