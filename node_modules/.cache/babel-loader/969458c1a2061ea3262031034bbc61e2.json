{"ast":null,"code":"import _slicedToArray from\"C:/Users/user/Desktop/Uma/vtc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer,useEffect}from\"react\";import'./App.css';import AppRoutes from\"./AppRoutes\";import{reducer}from\"./CommonMethods/Authentication\";import{AuthContext}from\"./CommonMethods/Authentication\";import{jsx as _jsx}from\"react/jsx-runtime\";var CryptoJS=require(\"crypto-js\");export default function App(){var initialState={isAuthenticated:false,user:null,token:null};var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var VerifyAuth=function VerifyAuth(){var encKey=\"873518d8d7a146f184173f87b86ffc35\";var userbytes=localStorage.getItem(\"user\")&&CryptoJS.AES.decrypt(localStorage.getItem(\"user\"),encKey);var user=userbytes&&userbytes.toString(CryptoJS.enc.Utf8);var token=userbytes&&userbytes.toString(CryptoJS.enc.Utf8);// eslint-disable-next-line no-const-assign\nif(user&&token){dispatch({type:\"LOGIN\",payload:{user:user,token:token}});}else dispatch({type:\"LOGOUT\"});};useEffect(function(){VerifyAuth();},[]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{state:state,dispatch:dispatch},children:/*#__PURE__*/_jsx(AppRoutes,{})});};","map":{"version":3,"sources":["C:/Users/user/Desktop/Uma/vtc/src/App.js"],"names":["React","useReducer","useEffect","AppRoutes","reducer","AuthContext","CryptoJS","require","App","initialState","isAuthenticated","user","token","state","dispatch","VerifyAuth","encKey","userbytes","localStorage","getItem","AES","decrypt","toString","enc","Utf8","type","payload"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,KAA6C,OAA7C,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,OAAT,KAAwB,gCAAxB,CACA,OAASC,WAAT,KAA4B,gCAA5B,C,2CACA,GAAIC,CAAAA,QAAQ,CAAGC,OAAO,CAAC,WAAD,CAAtB,CACA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,GAAMC,CAAAA,YAAY,CAAG,CACnBC,eAAe,CAAE,KADE,CAEnBC,IAAI,CAAE,IAFa,CAGnBC,KAAK,CAAE,IAHY,CAArB,CAKA,gBAA0BX,UAAU,CAACG,OAAD,CAAUK,YAAV,CAApC,4CAAOI,KAAP,iBAAcC,QAAd,iBACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIC,CAAAA,MAAM,CAAG,kCAAb,CACA,GAAIC,CAAAA,SAAS,CACXC,YAAY,CAACC,OAAb,CAAqB,MAArB,GACAb,QAAQ,CAACc,GAAT,CAAaC,OAAb,CAAqBH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB,CAAmDH,MAAnD,CAFF,CAIA,GAAIL,CAAAA,IAAI,CAAGM,SAAS,EAAIA,SAAS,CAACK,QAAV,CAAmBhB,QAAQ,CAACiB,GAAT,CAAaC,IAAhC,CAAxB,CACA,GAAMZ,CAAAA,KAAK,CACTK,SAAS,EAAIA,SAAS,CAACK,QAAV,CAAmBhB,QAAQ,CAACiB,GAAT,CAAaC,IAAhC,CADf,CAEA;AACA,GAAIb,IAAI,EAAIC,KAAZ,CAAmB,CACjBE,QAAQ,CAAC,CACPW,IAAI,CAAE,OADC,CAEPC,OAAO,CAAE,CACPf,IAAI,CAAJA,IADO,CAEPC,KAAK,CAALA,KAFO,CAFF,CAAD,CAAR,CAOD,CARD,IAQOE,CAAAA,QAAQ,CAAC,CAAEW,IAAI,CAAE,QAAR,CAAD,CAAR,CACR,CAnBD,CAoBAvB,SAAS,CAAC,UAAM,CACda,UAAU,GACX,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACE,KAAC,WAAD,CAAa,QAAb,EACA,KAAK,CAAE,CACLF,KAAK,CAALA,KADK,CAELC,QAAQ,CAARA,QAFK,CADP,uBAMA,KAAC,SAAD,IANA,EADF,CAUD","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport './App.css';\nimport AppRoutes from \"./AppRoutes\";\nimport { reducer } from \"./CommonMethods/Authentication\";\nimport { AuthContext } from \"./CommonMethods/Authentication\";\nvar CryptoJS = require(\"crypto-js\");\nexport default function App() {\n  const initialState = {\n    isAuthenticated: false,\n    user: null,\n    token: null\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const VerifyAuth = () => {\n    var encKey = \"873518d8d7a146f184173f87b86ffc35\";\n    var userbytes =\n      localStorage.getItem(\"user\") &&\n      CryptoJS.AES.decrypt(localStorage.getItem(\"user\"), encKey);\n     \n    let user = userbytes && userbytes.toString(CryptoJS.enc.Utf8);\n    const token =\n      userbytes && userbytes.toString(CryptoJS.enc.Utf8);\n    // eslint-disable-next-line no-const-assign\n    if (user && token) {\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          user,\n          token\n        }\n      });\n    } else dispatch({ type: \"LOGOUT\" });\n  };\n  useEffect(() => {\n    VerifyAuth();\n  }, []);\n  return (\n    <AuthContext.Provider\n    value={{\n      state,\n      dispatch\n    }}\n  >\n    <AppRoutes />\n  </AuthContext.Provider>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}