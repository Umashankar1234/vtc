{"ast":null,"code":"import Payment from'payment';function clearNumber(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';return value.replace(/\\D+/g,'');}export function formatCreditCardNumber(value){if(!value){return value;}var issuer=Payment.fns.cardType(value);var clearValue=clearNumber(value);var nextValue;switch(issuer){case'amex':nextValue=\"\".concat(clearValue.slice(0,4),\" \").concat(clearValue.slice(4,10),\" \").concat(clearValue.slice(10,15));break;case'dinersclub':nextValue=\"\".concat(clearValue.slice(0,4),\" \").concat(clearValue.slice(4,10),\" \").concat(clearValue.slice(10,14));break;default:nextValue=\"\".concat(clearValue.slice(0,4),\" \").concat(clearValue.slice(4,8),\" \").concat(clearValue.slice(8,12),\" \").concat(clearValue.slice(12,19));break;}return nextValue.trim();}export function formatCVC(value,prevValue){var allValues=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var clearValue=clearNumber(value);var maxLength=4;if(allValues.number){var issuer=Payment.fns.cardType(allValues.number);maxLength=issuer==='amex'?4:3;}return clearValue.slice(0,maxLength);}export function formatExpirationDate(value){var clearValue=clearNumber(value);if(clearValue.length>=3){return\"\".concat(clearValue.slice(0,2),\"/\").concat(clearValue.slice(2,4));}return clearValue;}","map":{"version":3,"sources":["C:/Users/user/Desktop/Uma/vtc/src/components/Payment/cardUtils.js"],"names":["Payment","clearNumber","value","replace","formatCreditCardNumber","issuer","fns","cardType","clearValue","nextValue","slice","trim","formatCVC","prevValue","allValues","maxLength","number","formatExpirationDate","length"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,SAApB,CAEA,QAASC,CAAAA,WAAT,EAAiC,IAAZC,CAAAA,KAAY,2DAAJ,EAAI,CAC/B,MAAOA,CAAAA,KAAK,CAACC,OAAN,CAAc,MAAd,CAAsB,EAAtB,CAAP,CACD,CAED,MAAO,SAASC,CAAAA,sBAAT,CAAgCF,KAAhC,CAAuC,CAC5C,GAAI,CAACA,KAAL,CAAY,CACV,MAAOA,CAAAA,KAAP,CACD,CAED,GAAMG,CAAAA,MAAM,CAAGL,OAAO,CAACM,GAAR,CAAYC,QAAZ,CAAqBL,KAArB,CAAf,CACA,GAAMM,CAAAA,UAAU,CAAGP,WAAW,CAACC,KAAD,CAA9B,CACA,GAAIO,CAAAA,SAAJ,CAEA,OAAQJ,MAAR,EACE,IAAK,MAAL,CACEI,SAAS,WAAMD,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAoB,CAApB,CAAN,aAAgCF,UAAU,CAACE,KAAX,CACvC,CADuC,CAEvC,EAFuC,CAAhC,aAGJF,UAAU,CAACE,KAAX,CAAiB,EAAjB,CAAqB,EAArB,CAHI,CAAT,CAIA,MACF,IAAK,YAAL,CACED,SAAS,WAAMD,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAoB,CAApB,CAAN,aAAgCF,UAAU,CAACE,KAAX,CACvC,CADuC,CAEvC,EAFuC,CAAhC,aAGJF,UAAU,CAACE,KAAX,CAAiB,EAAjB,CAAqB,EAArB,CAHI,CAAT,CAIA,MACF,QACED,SAAS,WAAMD,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAoB,CAApB,CAAN,aAAgCF,UAAU,CAACE,KAAX,CACvC,CADuC,CAEvC,CAFuC,CAAhC,aAGJF,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAoB,EAApB,CAHI,aAGuBF,UAAU,CAACE,KAAX,CAAiB,EAAjB,CAAqB,EAArB,CAHvB,CAAT,CAIA,MAlBJ,CAqBA,MAAOD,CAAAA,SAAS,CAACE,IAAV,EAAP,CACD,CAED,MAAO,SAASC,CAAAA,SAAT,CAAmBV,KAAnB,CAA0BW,SAA1B,CAAqD,IAAhBC,CAAAA,SAAgB,2DAAJ,EAAI,CAC1D,GAAMN,CAAAA,UAAU,CAAGP,WAAW,CAACC,KAAD,CAA9B,CACA,GAAIa,CAAAA,SAAS,CAAG,CAAhB,CAEA,GAAID,SAAS,CAACE,MAAd,CAAsB,CACpB,GAAMX,CAAAA,MAAM,CAAGL,OAAO,CAACM,GAAR,CAAYC,QAAZ,CAAqBO,SAAS,CAACE,MAA/B,CAAf,CACAD,SAAS,CAAGV,MAAM,GAAK,MAAX,CAAoB,CAApB,CAAwB,CAApC,CACD,CAED,MAAOG,CAAAA,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAoBK,SAApB,CAAP,CACD,CAED,MAAO,SAASE,CAAAA,oBAAT,CAA8Bf,KAA9B,CAAqC,CAC1C,GAAMM,CAAAA,UAAU,CAAGP,WAAW,CAACC,KAAD,CAA9B,CAEA,GAAIM,UAAU,CAACU,MAAX,EAAqB,CAAzB,CAA4B,CAC1B,gBAAUV,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAoB,CAApB,CAAV,aAAoCF,UAAU,CAACE,KAAX,CAAiB,CAAjB,CAAoB,CAApB,CAApC,EACD,CAED,MAAOF,CAAAA,UAAP,CACD","sourcesContent":["import Payment from 'payment'\n\nfunction clearNumber(value = '') {\n  return value.replace(/\\D+/g, '')\n}\n\nexport function formatCreditCardNumber(value) {\n  if (!value) {\n    return value\n  }\n\n  const issuer = Payment.fns.cardType(value)\n  const clearValue = clearNumber(value)\n  let nextValue\n\n  switch (issuer) {\n    case 'amex':\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 15)}`\n      break\n    case 'dinersclub':\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 14)}`\n      break\n    default:\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        8\n      )} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 19)}`\n      break\n  }\n\n  return nextValue.trim()\n}\n\nexport function formatCVC(value, prevValue, allValues = {}) {\n  const clearValue = clearNumber(value)\n  let maxLength = 4\n\n  if (allValues.number) {\n    const issuer = Payment.fns.cardType(allValues.number)\n    maxLength = issuer === 'amex' ? 4 : 3\n  }\n\n  return clearValue.slice(0, maxLength)\n}\n\nexport function formatExpirationDate(value) {\n  const clearValue = clearNumber(value)\n\n  if (clearValue.length >= 3) {\n    return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`\n  }\n\n  return clearValue\n}\n"]},"metadata":{},"sourceType":"module"}