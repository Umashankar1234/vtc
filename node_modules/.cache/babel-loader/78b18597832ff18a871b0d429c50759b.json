{"ast":null,"code":"import _objectSpread from\"C:/Users/user/Desktop/Uma/vtc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";var CryptoJS=require(\"crypto-js\");var AESKEY=\"873518d8d7a146f184173f87b86ffc35\";export var AuthContext=/*#__PURE__*/React.createContext();export var reducer=function reducer(state,action){switch(action.type){case\"LOGIN\":console.log(action.payload.user);var cipherUser=CryptoJS.AES.encrypt(action.payload.user,AESKEY).toString();localStorage.setItem(\"user\",cipherUser);localStorage.setItem(\"token\",cipherUser);return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,user:action.payload.user,token:action.payload.user});case\"LOGOUT\":// localStorage.clear();\nlocalStorage.removeItem(\"user\");localStorage.removeItem(\"token\");return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false,user:null,token:null});case\"TWITTER\":localStorage.setItem(\"twitter\",action.payload);return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,twitter:action.payload});default:return state;}};export function CheckRouteAccess(pathname){var encKey=\"873518d8d7a146f184173f87b86ffc35\";var userbytes=localStorage.getItem(\"user\")&&CryptoJS.AES.decrypt(localStorage.getItem(\"user\"),encKey);var user=userbytes&&userbytes.toString(CryptoJS.enc.Utf8);if(user)return true;else return false;}","map":{"version":3,"sources":["C:/Users/user/Desktop/Uma/vtc/src/CommonMethods/Authentication.js"],"names":["React","CryptoJS","require","AESKEY","AuthContext","createContext","reducer","state","action","type","console","log","payload","user","cipherUser","AES","encrypt","toString","localStorage","setItem","isAuthenticated","token","removeItem","twitter","CheckRouteAccess","pathname","encKey","userbytes","getItem","decrypt","enc","Utf8"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAGC,OAAO,CAAC,WAAD,CAAtB,CACA,GAAMC,CAAAA,MAAM,CAAG,kCAAf,CACA,MAAO,IAAMC,CAAAA,WAAW,cAAGJ,KAAK,CAACK,aAAN,EAApB,CACP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAExC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,OAAL,CACEC,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeC,IAA3B,EACA,GAAIC,CAAAA,UAAU,CAAGb,QAAQ,CAACc,GAAT,CAAaC,OAAb,CACdR,MAAM,CAACI,OAAP,CAAeC,IADD,CAEfV,MAFe,EAGfc,QAHe,EAAjB,CAIAC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BL,UAA7B,EACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BL,UAA9B,EACA,sCACKP,KADL,MAEEa,eAAe,CAAE,IAFnB,CAGEP,IAAI,CAAEL,MAAM,CAACI,OAAP,CAAeC,IAHvB,CAIEQ,KAAK,CAAEb,MAAM,CAACI,OAAP,CAAeC,IAJxB,GAMF,IAAK,QAAL,CACE;AACAK,YAAY,CAACI,UAAb,CAAwB,MAAxB,EACAJ,YAAY,CAACI,UAAb,CAAwB,OAAxB,EACA,sCACKf,KADL,MAEEa,eAAe,CAAE,KAFnB,CAGEP,IAAI,CAAE,IAHR,CAIEQ,KAAK,CAAE,IAJT,GAMF,IAAK,SAAL,CACEH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgCX,MAAM,CAACI,OAAvC,EACA,sCACKL,KADL,MAEEa,eAAe,CAAE,IAFnB,CAGEG,OAAO,CAAEf,MAAM,CAACI,OAHlB,GAKF,QACE,MAAOL,CAAAA,KAAP,CAjCJ,CAmCD,CArCM,CAsCP,MAAO,SAASiB,CAAAA,gBAAT,CAA0BC,QAA1B,CAAoC,CACzC,GAAIC,CAAAA,MAAM,CAAG,kCAAb,CACA,GAAIC,CAAAA,SAAS,CACXT,YAAY,CAACU,OAAb,CAAqB,MAArB,GACA3B,QAAQ,CAACc,GAAT,CAAac,OAAb,CAAqBX,YAAY,CAACU,OAAb,CAAqB,MAArB,CAArB,CAAmDF,MAAnD,CAFF,CAGA,GAAIb,CAAAA,IAAI,CAAGc,SAAS,EAAIA,SAAS,CAACV,QAAV,CAAmBhB,QAAQ,CAAC6B,GAAT,CAAaC,IAAhC,CAAxB,CACA,GAAIlB,IAAJ,CAAU,MAAO,KAAP,CAAV,IACK,OAAO,MAAP,CACN","sourcesContent":["import React from \"react\";\nvar CryptoJS = require(\"crypto-js\");\nconst AESKEY = \"873518d8d7a146f184173f87b86ffc35\";\nexport const AuthContext = React.createContext();\nexport const reducer = (state, action) => {\n\n  switch (action.type) {\n    case \"LOGIN\":\n      console.log(action.payload.user);\n      var cipherUser = CryptoJS.AES.encrypt(\n        (action.payload.user),\n        AESKEY\n      ).toString();\n      localStorage.setItem(\"user\", cipherUser);\n      localStorage.setItem(\"token\", cipherUser);\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.user\n      };\n    case \"LOGOUT\":\n      // localStorage.clear();\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        token: null\n      };\n    case \"TWITTER\":\n      localStorage.setItem(\"twitter\", action.payload);\n      return {\n        ...state,\n        isAuthenticated: true,\n        twitter: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport function CheckRouteAccess(pathname) {\n  var encKey = \"873518d8d7a146f184173f87b86ffc35\";\n  var userbytes =\n    localStorage.getItem(\"user\") &&\n    CryptoJS.AES.decrypt(localStorage.getItem(\"user\"), encKey);\n  let user = userbytes && userbytes.toString(CryptoJS.enc.Utf8);\n  if (user) return true;\n  else return false;\n}"]},"metadata":{},"sourceType":"module"}