{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Uma\\\\vtc\\\\src\\\\components\\\\ReactTextCaptcha\\\\Captcha.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import { loadCaptchaEnginge, LoadCanvasTemplate, LoadCanvasTemplateNoReload, validateCaptcha } from 'react-simple-captcha';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Captcha() {\n  _s();\n\n  const [user, setUser] = useState({\n    username: \"\"\n  });\n  const [captcha, setCaptcha] = useState(\"\");\n  const characters = 'abc123';\n  useEffect(() => {\n    generateString(6);\n  }, []);\n\n  function generateString(length) {\n    let result = '';\n    const charactersLength = characters.length;\n\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    setCaptcha(result); //return result;\n  }\n\n  const generatenewcode = () => {\n    generateString(6);\n  }; //const captcha = generateString(6) // Function called here and save in captcha variable\n\n\n  let handleChange = e => {\n    let name = e.target.name;\n    let value = e.target.value;\n    user[name] = value;\n    setUser(user);\n  };\n\n  const onSubmit = e => {\n    var element = document.getElementById(\"succesBTN\");\n    var inputData = document.getElementById(\"inputType\");\n    element.style.cursor = \"wait\";\n    element.innerHTML = \"Checking...\";\n    inputData.disabled = true;\n    element.disabled = true;\n\n    var myFunctions = function () {\n      if (captcha == user.username) {\n        element.style.backgroundColor = \"green\";\n        element.innerHTML = \"Captcha Verified\";\n        element.disabled = true;\n        element.style.cursor = \"not-allowed\"; //inputData.style.display = \"none\";\n      } else {\n        element.style.backgroundColor = \"red\";\n        element.style.cursor = \"not-allowed\";\n        element.innerHTML = \"Not Matched\";\n        element.disabled = true; //  element.disabled = true;\n\n        var myFunction = function () {\n          element.style.backgroundColor = \"#007bff\";\n          element.style.cursor = \"pointer\";\n          element.innerHTML = \"Verify Captcha\";\n          element.disabled = false;\n          inputData.disabled = false;\n          inputData.value = 'sssss';\n        };\n\n        setTimeout(myFunction, 5000);\n      }\n    };\n\n    setTimeout(myFunctions, 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"agent_pop_main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"menu_opt_sec\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mar_top row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-md-4\",\n              children: \"verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-md-8\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"inputType\",\n                className: \"form-control\",\n                placeholder: \"Enter Captcha\",\n                name: \"username\",\n                onChange: handleChange,\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mar_top row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-md-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                id: \"captcha\",\n                style: {\n                  margin: \"10px\"\n                },\n                children: captcha\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"succesBTN\",\n                onClick: generatenewcode,\n                class: \"btn btn-primary ml-1\",\n                style: {\n                  backgroundColor: \"#ffa12d\",\n                  borderStyle: \"none\"\n                },\n                children: \"regenerate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"col-md-8\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                id: \"succesBTN\",\n                onClick: onSubmit,\n                class: \"btn btn-primary ml-1\",\n                style: {\n                  backgroundColor: \"#ffa12d\",\n                  borderStyle: \"none\"\n                },\n                children: \"Verify Captcha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Captcha, \"Lgb4CsaJ299smbrcs9HXN1FVAGM=\");\n\n_c = Captcha;\n\nvar _c;\n\n$RefreshReg$(_c, \"Captcha\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Uma/vtc/src/components/ReactTextCaptcha/Captcha.js"],"names":["React","useState","useEffect","Captcha","user","setUser","username","captcha","setCaptcha","characters","generateString","length","result","charactersLength","i","charAt","Math","floor","random","generatenewcode","handleChange","e","name","target","value","onSubmit","element","document","getElementById","inputData","style","cursor","innerHTML","disabled","myFunctions","backgroundColor","myFunction","setTimeout","margin","borderStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { loadCaptchaEnginge, LoadCanvasTemplate, LoadCanvasTemplateNoReload, validateCaptcha } from 'react-simple-captcha';\nexport default function Captcha() {\n    const [user, setUser] = useState({\n        username: \"\"\n    });\n    const [captcha, setCaptcha] = useState(\"\");\n    const characters = 'abc123';\n    useEffect(() => {\n        generateString(6);\n    }, []);\n    function generateString(length) {\n        let result = '';\n        const charactersLength = characters.length;\n        for (let i = 0; i < length; i++) {\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        setCaptcha(result);\n        //return result;\n    }\n    const generatenewcode = () => {\n        generateString(6);\n    }\n    //const captcha = generateString(6) // Function called here and save in captcha variable\n    let handleChange = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n        user[name] = value;\n        setUser(user);\n    }\n    const onSubmit = e => {\n        var element = document.getElementById(\"succesBTN\");\n        var inputData = document.getElementById(\"inputType\");\n        element.style.cursor = \"wait\";\n        element.innerHTML = \"Checking...\";\n        inputData.disabled = true;\n        element.disabled = true;\n        var myFunctions = function () {\n            if (captcha == user.username) {\n                element.style.backgroundColor = \"green\";\n                element.innerHTML = \"Captcha Verified\";\n                element.disabled = true;\n                element.style.cursor = \"not-allowed\";\n                //inputData.style.display = \"none\";\n            }\n            else {\n                element.style.backgroundColor = \"red\";\n                element.style.cursor = \"not-allowed\";\n                element.innerHTML = \"Not Matched\";\n                element.disabled = true;\n                //  element.disabled = true;\n                var myFunction = function () {\n                    element.style.backgroundColor = \"#007bff\";\n                    element.style.cursor = \"pointer\";\n                    element.innerHTML = \"Verify Captcha\";\n                    element.disabled = false;\n                    inputData.disabled = false;\n                    inputData.value = 'sssss';\n                };\n                setTimeout(myFunction, 5000);\n            }\n        }\n        setTimeout(myFunctions, 5000);\n    };\n\n    return (\n        <>\n            <div class=\"container\">\n                <div class=\"agent_pop_main\">\n                    <div class=\"\">\n                    </div>\n                    <div class=\"menu_opt_sec\">\n                        <div class=\"mar_top row\">\n                            <div class=\"col-md-4\">\n                                verify\n                            </div>\n                            <div class=\"col-md-8\">\n                                <input type=\"text\" id=\"inputType\" className=\"form-control\" placeholder=\"Enter Captcha\"\n                                    name=\"username\" onChange={handleChange} autocomplete=\"off\"\n                                />\n                            </div>\n                        </div>\n                        <div class=\"mar_top row\">\n                            <div class=\"col-md-8\">\n                                <h4 id=\"captcha\" style={{ margin: \"10px\" }}>{captcha}</h4>\n                                <button id=\"succesBTN\" onClick={generatenewcode} class=\"btn btn-primary ml-1\" style={{ backgroundColor: \"#ffa12d\", borderStyle: \"none\" }}>regenerate</button>\n                            </div>\n                            <div class=\"col-md-8\">\n                                <button type=\"button\" id=\"succesBTN\" onClick={onSubmit} class=\"btn btn-primary ml-1\" style={{ backgroundColor: \"#ffa12d\", borderStyle: \"none\" }}>Verify Captcha</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}